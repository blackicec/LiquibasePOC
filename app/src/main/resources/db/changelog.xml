<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
    <preConditions>
        <runningAs username="root" />
    </preConditions>
    <changeSet id="SEED_001" author="James Powell" context="seed">
        <customChange class="app.migrations.seed.S001_AddInitialSeedData">
            <param name="ordersHydrationCount" value="500" />
        </customChange>
    </changeSet>
    <changeSet id="SEED_STAGE_001" author="James Powell" context="stage">
        <!-- "This should only run for the test environment" -->
        <customChange class="app.migrations.seed.S001_AddInitialSeedData">
            <param name="ordersHydrationCount" value="1500" />
        </customChange>
        <createTable tableName="test_only_table">
            <column name="id" type="INT" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="title" type="VARCHAR(128)" autoIncrement="true">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <insert tableName="test_only_table">
            <column name="id" value="1"/>
            <column name="title" value="Liquibase 4.0.8 Released"/>
        </insert>
        <insert tableName="test_only_table">
            <column name="id" value="2"/>
            <column name="title" value="Liquibase 4.1.0 Released"/>
        </insert>
    </changeSet>
    <changeSet id="2" author="James Powell" context="bse,dev">
        <!-- Create a view for order email address containing a gmail domain -->
        <sqlFile path="db/views/orders_with_domain-V1.sql" dbms="mysql" endDelimiter=";" />
    </changeSet>
    <changeSet id="3" author="Jane Smith" context="bse,dev">
        <createTable tableName="users">
            <column name="id" type="INT" autoIncrement="true">
                <constraints primaryKey="true" nullable="false" />
            </column>
            <column name="firstName" type="VARCHAR(128)">
                <constraints nullable="false" />
            </column>
            <column name="lastName" type="VARCHAR(128)">
                <constraints nullable="false" />
            </column>
            <column name="email" type="VARCHAR(128)">
                <constraints nullable="false" unique="true" uniqueConstraintName="users_email_unique" />
            </column>
            <column name="city" type="VARCHAR(128)">
                <constraints nullable="false" />
            </column>
            <column name="state" type="CHAR(2)">
                <constraints nullable="false" />
            </column>
        </createTable>
    </changeSet>
    <changeSet id="4" author="John Smith" context="bse,dev">
        <addColumn tableName="users">
            <column name="phone" afterColumn="email" type="VARCHAR(32)"/>
        </addColumn>
    </changeSet>
    <changeSet id="5" author="John Smith" context="bse,stage">
        <customChange class="app.migrations.custom.M001_FixOrderStatus"/>
        <createView viewName="v_users" replaceIfExists="true" >
            SELECT firstName, lastname, email
            FROM users
        </createView>
    </changeSet>
    <changeSet id="6" author="James Powell" context="bse,dev">
        <!-- Update a view changing the email address to the yahoo domain -->
        <sqlFile path="db/views/orders_with_domain-V2.sql" dbms="mysql" endDelimiter=";" />
    </changeSet>
</databaseChangeLog>

<!-- TODO: Break up table and view manipulation into separate changelogs and use <includeAll>; Leave seed logic in here. -->
<!-- TODO: After break out, update IDs to favor changelog category. Ex. Views -> v_001, ... v_157, Table -> t_003, -->